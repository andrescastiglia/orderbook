var searchIndex = JSON.parse('{\
"order":{"doc":"","t":[0,0,0,0,0,0,0,3,11,11,11,11,11,11,11,11,11,11,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["internal","console","operation","order","order_book","side","trade","Console","borrow","borrow_mut","enabled","flush","from","into","log","try_from","try_into","type_id","Create","Delete","Operation","borrow","borrow_mut","cmp","eq","fmt","from","from_str","into","partial_cmp","serialize","try_from","try_into","type_id","ConvertBytesError","Deserialize","FileError","FileError","Order","borrow","borrow","borrow_mut","borrow_mut","cmp","deserialize","eq","fmt","fmt","fmt","from","from","from","from","from","from_file","into","into","is_delete","is_new","match_with","partial_cmp","same_operation","serialize","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","DeserializeError","FileError","FileError","OrderBook","add","borrow","borrow","borrow_mut","borrow_mut","cancel","default","flush","fmt","fmt","from","from","from","from","into","into","serialize","source","take","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","Buy","Sell","Side","borrow","borrow_mut","cmp","eq","fmt","from","from_str","into","partial_cmp","serialize","try_from","try_into","type_id","DeserializeError","FileError","FileError","Trade","Trades","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","flush","fmt","fmt","from","from","from","from","from","into","into","into","new","serialize","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0"],"q":["order","order::internal","","","","","","order::internal::console","","","","","","","","","","","order::internal::operation","","","","","","","","","","","","","","","","order::internal::order","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","order::internal::order::FileError","","","order::internal::order_book","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","order::internal::order_book::FileError","","order::internal::side","","","","","","","","","","","","","","","","order::internal::trade","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","order::internal::trade::FileError",""],"d":["","","","","","","","The console is a singleton that is used to log messages to …","","","Determines if a log message with the specified metadata …","Flushes any buffered records","","","Logs the <code>Record</code>","","","","","","Used to determine the type of the operation.","","","","","","","","","","","","","","","","","","Struct that represents a single order","","","","","","","","","","","","","","","","Load orders from a file","","","","","Match two orders, see also …","","","","","","","","","","","","","","","","","","","Collection of orders","Add an order to the order book","","","","","Remove an original order from the order book","","Write the order book to a file","","","","","","","","","","","Remove an opposite order from the order book","","","","","","","","","","","","Side of the order","","","","","","","","","","","","","","","","","Trade is a struct that represents a trade in the market","","Add a trade to the list of trades","","","","","","","","Write the trades to a file","","","","","","","","","","","Create a new trade","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,0,3,0,3,4,3,4,4,4,4,3,3,4,3,3,3,3,4,4,3,4,4,4,4,4,4,4,3,3,4,3,4,3,4,3,4,5,6,7,8,0,8,0,9,8,9,8,9,9,9,9,8,8,8,8,8,9,8,9,9,8,9,8,8,9,8,9,8,9,10,11,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,13,0,13,0,0,14,13,15,14,13,15,14,14,14,13,13,13,13,13,15,14,13,15,14,15,15,13,13,13,15,14,13,15,14,13,15,14,16,17],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[["metadata",3]],["bool",15]],[[]],[[]],[[]],[[["record",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[["operation",4]],["ordering",4]],[[["operation",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],["result",4]],[[]],[[["operation",4]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["ordering",4]],[[],["result",4]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["error",3]]],[[["fromutf8error",3]]],[[["error",3]]],[[]],[[]],[[["str",15]],["result",4,[["vec",3,[["order",3]]],["fileerror",4]]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["order",3]],["bool",15]],[[],["option",4,[["ordering",4]]]],[[["order",3]],["bool",15]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["order",3]]],[[]],[[]],[[]],[[]],[[["order",3]],["option",4,[["order",3]]]],[[],["orderbook",3]],[[],["result",4,[["fileerror",4]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[["error",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[["order",3]],["option",4,[["order",3]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[["side",4]],["ordering",4]],[[["side",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],["result",4]],[[]],[[["side",4]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[["order",3],["order",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["trades",3]],[[],["result",4,[["fileerror",4]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["order",3],["order",3]],["trade",3]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[3,"Console"],[4,"Operation"],[4,"FileError"],[3,"Order"],[13,"FileError"],[13,"ConvertBytesError"],[13,"Deserialize"],[4,"FileError"],[3,"OrderBook"],[13,"FileError"],[13,"DeserializeError"],[4,"Side"],[4,"FileError"],[3,"Trades"],[3,"Trade"],[13,"FileError"],[13,"DeserializeError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};